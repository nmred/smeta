#!/usr/local/swan/opt/bin/php 
<?php
/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4 foldmethod=marker: */
// +---------------------------------------------------------------------------
// | SWAN [ $_SWANBR_SLOGAN_$ ]
// +---------------------------------------------------------------------------
// | Copyright $_SWANBR_COPYRIGHT_$
// +---------------------------------------------------------------------------
// | Version  $_SWANBR_VERSION_$
// +---------------------------------------------------------------------------
// | Licensed ( $_SWANBR_LICENSED_URL_$ )
// +---------------------------------------------------------------------------
// | $_SWANBR_WEB_DOMAIN_$
// +---------------------------------------------------------------------------
 
require_once 'core.php';
require_once PATH_SWAN_LIB . 'daemon/sw_daemon.class.php';
/**
+------------------------------------------------------------------------------
* 对服务器进行压力测试，产生系统配置的随机数用来测试snmp和rrdtool
* 本脚本利用的工具是apache的ab
+------------------------------------------------------------------------------
* 
* @package 
* @version $_SWANBR_VERSION_$
* @copyright $_SWANBR_COPYRIGHT_$
* @author $_SWANBR_AUTHOR_$ 
+------------------------------------------------------------------------------
*/
class swan_snmp_test
{
	// {{{ members

	/**
	 * 测试运行进程ID 
	 * 
	 * @var string
	 * @access protected
	 */
	protected $__pid_file_name = 'ab_test.pid';

	/**
	 * pid的路劲 
	 * 
	 * @var string
	 * @access protected
	 */
	protected $__pid_file_path;

	// }}}
	// {{{ functions
	// {{{ public function __construct()

	/**
	 * __construct 
	 * 
	 * @access public
	 * @return void
	 */
	public function __construct()
	{
		$this->__pid_file_path = PATH_SWAN_RUN . 'daemon';	
	}

	// }}}
	// {{{ public function run()

	/**
	 * 运行 
	 * 
	 * @access public
	 * @return void
	 */
	public function run($cmd, $sleep)
	{
		$daemon_conf = array(
				'pid_file_name' => $this->__pid_file_name,
				'pid_file_path' => $this->__pid_file_path,
				'verbose'     => true
		);

		$daemon = new sw_daemon($daemon_conf);
		if ($cmd == 'start') {
			$daemon->add_signal_handler(SIGUSR1, array($this, 'ab_test'));
			$daemon->start();
			for (;;) {
				$daemon->send_signal(SIGUSR1);
				sleep($sleep);
			}
		} elseif ($cmd == 'stop') {
			$daemon->stop();
		} else {
			die("unknown action.");
		}
		
	}

	// }}}
	// {{{ public function ab_test()

	/**
	 * ab_test 
	 * 
	 * @access public
	 * @return void
	 */
	public function ab_test()
	{
		$cmd = '/usr/local/swan/opt/apache2/bin/ab -n ';
		$cmd .= $this->get_count() . ' -c 200 -k http://localhost/?q=user >/dev/null 2>&1';
		exec($cmd, $return_arr);
	}

	// }}}
	// {{{ public function get_count()

	/**
	 * 获得随机的请求次数 
	 * 
	 * @access public
	 * @return int
	 */
	public function get_count()
	{
		return mt_rand(1000, 100000);
	}

	// }}}	
	// }}}
}

declare(ticks = 1);
$cmd = $_SERVER['argv'][1];
$sleep = $_SERVER['argv'][2];
$ab = new swan_snmp_test();
try {
	$ab->run($cmd, $sleep);
} catch (sw_daemon_exception $e) {
	echo $e->getMessage() . PHP_EOL;	
}
?>

